{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","actions/cartActions.js","screens/CartScreen.js","screens/ProductScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","console","log","response","message","Header","useDispatch","useSelector","Navbar","expand","collapseOnSelect","style","background","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","addToCart","qty","countInStock","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","ListGroup","rounded","reduce","acc","toFixed","disabled","ProductScreen","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","review","createdAt","substring","post","Group","controlId","Label","row","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.725979ba.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map(x =>\r\n            x.product === existItem.product ? item : x\r\n          )\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item]\r\n        }\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n      }\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload\r\n      }\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {}\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return {\r\n        orders: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={e => setKeyword(e.target.value)}\r\n        placeholder='Search Products ...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_FAIL\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n    console.log(data)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = user => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n    console.log(data)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n    console.log(data)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = user => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar\r\n        variant='dark'\r\n        expand='lg'\r\n        collapseOnSelect\r\n        style={{ background: '#0f3959' }}\r\n      >\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Muna Shop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i>Sign-in\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>copyright &copy; Muna Shop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\nRating.defaultProps = {\r\n  color: '#f8e825'\r\n}\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n      </Card.Body>\r\n\r\n      <Card.Text as='div'>\r\n        <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n      </Card.Text>\r\n      <Card.Text as='h3'>\r\n        <span>&#8358;</span>\r\n        {product.price}\r\n      </Card.Text>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block'\r\n      }}\r\n    >\r\n      <span className='sr-only'>loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map(x => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productList/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (\r\n  keyword = '',\r\n  pageNumber = ''\r\n) => async dispatch => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = id => async dispatch => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = product => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector(state => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map(product => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (<span>&#8358;</span>\r\n                {product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To Proshop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electronics'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector(state => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light' style={{color: '#0f3959'}}>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map(product => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty\r\n    }\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = id => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = data => dispatch => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = data => dispatch => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Button, Form, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector(state => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = id => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1 style={{color: '#0f3959'}}>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>go back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map(item => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <span>&#8358;</span>\r\n                    {item.price}\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={e =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map(x => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2 style={{color: '#0f3959'}}>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              <span>&#8358;</span>\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                proceed to checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Row, Button, ListGroup, Card, Image, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector(state => state.productDetails)\r\n  const { product, loading, error } = productDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    error: errorProductReview\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert('Review Submitted!')\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>price: <span>&#8358;</span>{product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>price:</Col>\r\n                      <Col>\r\n                        <strong><span>&#8358;</span>{product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>status:</Col>\r\n                      <Col>\r\n                        <strong>\r\n                          {product.countInStock ? 'in stock' : 'out of stock'}\r\n                        </strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={e => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(x => (\r\n                              <option key={x + 1} value={x + 1}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='block-btn'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add to cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map(review => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={e => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={e => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1 style={{ color: '#0f3959' }}>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector(state => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmpassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={e => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n    </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector(state => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        console.log(user)\r\n      }\r\n    }\r\n    console.log()\r\n  }, [history, userInfo, dispatch, user])\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmpassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={e => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>\r\n                    <span>&#8358;</span>\r\n                    {order.totalPrice}\r\n                  </td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_FAIL\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = order => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = id => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = order => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo }\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={e => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={e => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={e => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={e => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1 style={{ color: '#0f3959' }}>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={e => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/*<Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={e => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>*/}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector(state => state.cart)\r\n\r\n  // Calculate prices\r\n  const addDecimals = num => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 4)\r\n  )\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n\r\n  cart.taxPrice = addDecimals(Number((0.05 * cart.itemsPrice).toFixed(2)))\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector(state => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2 style={{ color: '#0f3959' }}>Shippping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2 style={{ color: '#0f3959' }}>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2 style={{ color: '#0f3959' }}>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x <span>&#8358;</span>\r\n                          {item.price} = <span>&#8358;</span>\r\n                          {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2 style={{ color: '#0f3959' }}>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>\r\n                    <span>&#8358;</span>\r\n                    {cart.itemsPrice}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shippping</Col>\r\n                  <Col>\r\n                    <span>&#8358;</span>\r\n                    {cart.shippingPrice}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>\r\n                    <span>&#8358;</span>\r\n                    {cart.taxPrice}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>\r\n                    <span>&#8358;</span>\r\n                    {cart.totalPrice}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector(state => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector(state => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector(state => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    // Calculate prices\r\n    const addDecimals = num => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 4)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order, successDeliver])\r\n\r\n  const successPaymentHandler = paymentResult => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1 style={{ color: '#0f3959' }}>ORDER {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2 style={{ color: '#0f3959' }}>Shippping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong style={{ color: '#0f3959' }}>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong style={{ color: '#0f3959' }}>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success' style={{ color: '#0f3959' }}>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger' style={{ color: '#0f3959' }}>\r\n                  Not Delivered\r\n                </Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2 style={{ color: '#0f3959' }}>Payment Method</h2>\r\n              <p>\r\n                <strong style={{ color: '#0f3959' }}>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item style={{ color: '#0f3959' }}>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x <span>&#8358;</span>\r\n                          {item.price} = <span>&#8358;</span>\r\n                          {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2 style={{ color: '#0f3959' }}>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>\r\n                    <span>&#8358;</span>\r\n                    {order.itemsPrice}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col style={{ color: '#0f3959' }}>Shippping</Col>\r\n                  <Col>\r\n                    <span>&#8358;</span>\r\n                    {order.shippingPrice}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col style={{ color: '#0f3959' }}>Tax</Col>\r\n                  <Col>\r\n                    <span>&#8358;</span>\r\n                    {order.taxPrice}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col style={{ color: '#0f3959' }}>Total</Col>\r\n                  <Col>\r\n                    <span>&#8358;</span>\r\n                    {order.totalPrice}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type='button'\r\n                    className='btn btn-block'\r\n                    onClick={deliverHandler}\r\n                    style={{ color: '#0f3959' }}\r\n                  >\r\n                    Mark As Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector(state => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector(state => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = id => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map(user => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector(state => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [user, dispatch, userId, successUpdate, history])\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={e => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector(state => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const productDelete = useSelector(state => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector(state => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber\r\n  ])\r\n\r\n  const deleteHandler = id => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map(product => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>\r\n                    <span>&#8358;</span>\r\n                    {product.price}\r\n                  </td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector(state => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector(state => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async e => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='Number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={e => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={e => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={e => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={e => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={e => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector(state => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ color: '#0f3959' }}>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr style={{ color: '#0f3959' }}>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(order => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>\r\n                  <span>&#8358;</span>\r\n                  {order.totalPrice}\r\n                </td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport { Container } from 'react-bootstrap'\nimport HomeScreen from './screens/HomeScreen'\nimport CartScreen from './screens/CartScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}